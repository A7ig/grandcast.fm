type Query {
  podcastSearch(searchTerm: String!): [PodcastSearchResult] @cypher(statement: """
  WITH toString(timestamp()/1000) AS timestamp
  WITH {
  `User-Agent`: "GRANDstackFM",
  `X-Auth-Date`: timestamp,
  `X-Auth-Key`: apoc.static.get('podcastkey'),
  `Authorization`: apoc.util.sha1([apoc.static.get('podcastkey')+apoc.static.get('podcastsecret') +timestamp])
  } AS headers
  CALL apoc.load.jsonParams("https://api.podcastindex.org/api/1.0/search/byterm?q=" + apoc.text.urlencode($searchTerm), headers, '', '') YIELD value
  UNWIND value.feeds AS feed
  RETURN {
   itunesId: feed.itunesId,
   title: feed.title,
   description: feed.description,
   feedURL: feed.url,
   artwork: feed.artwork,
   categories: apoc.map.values(feed.categories, keys(feed.categories))
  }
  """)
}


type PodcastSearchResult {
  itunesId: String
  title: String
  description: String
  feedURL: String
  artwork: String
  categories: [String]
}